plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id "com.microsoft.azure.azurewebapp" version "1.2.0"
	id 'java'
}

apply plugin: 'application'

mainClassName = 'esfot.tesis.botics.BoticsApplication'
gradle.startParameter.showStacktrace = ShowStacktrace.ALWAYS

group = 'esfot.tesis'
version = 'pre-demo'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'javax.validation:validation-api:2.0.1.Final'
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.2'
	implementation 'org.springframework.boot:spring-boot-starter-mail:2.7.4'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.12'
	implementation 'org.springdoc:springdoc-openapi-javadoc:1.6.12'
	implementation 'com.itextpdf:kernel:7.2.3'
	implementation 'com.itextpdf:html2pdf:4.0.3'
	annotationProcessor 'com.github.therapi:therapi-runtime-javadoc-scribe:0.13.0'
	implementation 'com.github.therapi:therapi-runtime-javadoc:0.13.0'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation group: 'com.cloudinary', name: 'cloudinary-http44', version: '1.33.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

compileJava {
	sourceCompatibility = '1.8'
	targetCompatibility = '1.8'
}

jar {

	duplicatesStrategy = DuplicatesStrategy.EXCLUDE

	manifest {
		attributes "Main-Class": mainClassName
	}

	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
}
